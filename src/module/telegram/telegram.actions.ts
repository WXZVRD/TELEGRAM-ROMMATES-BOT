import { Action, Ctx, Hears, SceneEnter, Update } from 'nestjs-telegraf'
import { Injectable, Logger } from '@nestjs/common'
import { Context, Markup, Scenes } from 'telegraf'
import { ScenesData } from '@/module/telegram/scenes/scenes.data'
import {
	ActionTitles,
	CallbackActions
} from '@/module/telegram/types/callbackActions.enum'
import { Account } from '@/module/account/entities/account.entity'
import { Buttons, TelegramProfileRenderer } from '@/module/telegram/ui'
import { AccountService } from '@/module/account/account.service'

@Update()
@Injectable()
export class TelegramActions {
	private readonly logger = new Logger(TelegramActions.name)

	constructor(private readonly accountService: AccountService) {}

	@Action(CallbackActions.CREATE_PROFILE)
	async onCreateProfile(@Ctx() ctx: Scenes.SceneContext): Promise<void> {
		const telegramId = ctx.from?.id
		const username = ctx.from?.username || 'unknown'

		this.logger.log(
			`Callback CREATE_PROFILE from @${username} (${telegramId})`
		)

		await ctx.answerCbQuery()
		await ctx.reply('üìã –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã...')
		await ctx.scene.enter(ScenesData.CREATE_PROFILE)

		this.logger.log(
			`User @${username} was moved to scene: ${ScenesData.CREATE_PROFILE}`
		)
	}

	@Hears(ActionTitles.FIND_ROOMMATE)
	async findRoommate(@Ctx() ctx: Context): Promise<void> {
		await ctx.reply(
			'üîç –ü–æ–∏—Å–∫ —Å–æ–∂–∏—Ç–µ–ª—è –∑–∞–ø—É—â–µ–Ω!\n\n' +
				'–°–µ–π—á–∞—Å —è –Ω–∞—á–Ω—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–±–µ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç —Å–æ—Å–µ–¥–∞ –ø–æ –∂–∏–ª—å—é.\n' +
				'–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è ‚Äî –∂–º–∏ ‚ù§Ô∏è. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ ‚Äî –Ω–∞–∂–º–∏ üîô.',
			Markup.keyboard([
				[Buttons.likeProfile(), Buttons.backToMenu()]
			]).resize()
		)
	}

	@Hears(ActionTitles.EDIT_PROFILE)
	async editProfile(@Ctx() ctx: Context): Promise<void> {
		console.log('ActionTitles.EDIT_PROFILE')
		await ctx.reply('üòÖ ActionTitles.EDIT_PROFILE.')
	}

	@Hears(ActionTitles.BACK_TO_MENU)
	async backToMenu(@Ctx() ctx: Context): Promise<void> {
		await ctx.reply(
			'üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n' +
				'‚Äî üîç –ù–∞–π—Ç–∏ —Å–æ–∂–∏—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã\n' +
				'‚Äî üìù –ò–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–º–µ–Ω—è–ª–æ—Å—å\n' +
				'‚Äî üë§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –µ—â—ë —Ä–∞–∑',
			Markup.keyboard([
				[
					Buttons.findRoommate(),
					Buttons.changeProfile(),
					Buttons.showProfile()
				]
			]).resize()
		)

		await ctx.reply('üòâ –ì–æ—Ç–æ–≤–æ! –ß—Ç–æ –¥–∞–ª—å—à–µ?')
	}

	@Hears(ActionTitles.SHOW_PROFILE)
	async showProfile(@Ctx() ctx: Context): Promise<void> {
		const telegramId: number = ctx.from.id

		let account: Account | null =
			await this.accountService.findByTelegramId(telegramId)

		const renderedProfile = TelegramProfileRenderer.getMediaGroup({
			...account.profile,
			account
		})
		await ctx.replyWithMediaGroup(renderedProfile)

		await ctx.reply(
			'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
			Markup.keyboard([
				[
					Buttons.findRoommate(),
					Buttons.changeProfile(),
					Buttons.backToMenu()
				]
			]).resize()
		)
	}
}
